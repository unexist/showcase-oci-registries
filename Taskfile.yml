version: '3'
env:
  PORT: '{{.PORT | default "8080"}}'
  HOST: '{{.HOST | default "localhost"}}'
  BINARY: '{{.BINARY | default "todo-service.bin"}}'
  REGISTRY_URL: '{{.REGISTRY_URL | default "127.0.0.1:5000"}}'
  USERNAME: '{{.USERNAME | default "user"}}'
  PASSWORD: '{{.PASSWORD | default "test"}}'
  VERSION: '{{.VERSION | default "latest"}}'
  ARTIFACT_NAME: '{{.ARTIFACT_NAME | default "todo-service"}}'
  ARTIFACT_TYPE: '{{.ARTIFACT_TYPE | default "application/vnd.oci.image.layer.v1.tar"}}'

  includes:


includes:
  registry:
    taskfile: ./infrastructure/Taskfile-registry.yml
  oras:
    taskfile: ./infrastructure/Taskfile-oras.yml
  cosign:
    taskfile: ./infrastructure/Taskfile-cosign.yml
  sbom:
    taskfile: ./infrastructure/Taskfile-sbom.yml

tasks:
  todo:
    vars:
      JSON: '{ "description": "Todo string", "title": "Todo string" }'
    cmds:
      - "curl -X POST 'http://{{.HOST}}:{{.PORT}}/todo' -H 'Content-Type: application/json' -d '{{.JSON}}'"

  list:
    cmds:
      - "curl -X GET 'http://{{.HOST}}:{{.PORT}}/todo' -H 'accept: */*' | jq ."

  swagger:
    cmds:
      - "cd todo-service; swag init"
    sources:
      - todo-service/**/*.go
    generates:
      - todo-service/docs/swagger.yaml

  vet:
    cmds:
      - "cd todo-service; go vet"

  test:
    cmds:
      - hurl --test todo.hurl

  build:
    cmds:
      - "cd todo-service; GO111MODULE=on; go mod download; go build -o {{.BINARY}}"
    sources:
      - todo-service/**/*.go
    generates:
      - todo-service/{{.BINARY}}

  sbom:
    cmds:
      - ""

  run:
    deps: [build]
    cmds:
      - "./todo-service/{{.BINARY}}"

  install:
    cmds:
      - "go install github.com/swaggo/swag/cmd/swag@latest"
      - "go install braces.dev/errtrace/cmd/errtrace@latest"
      - "go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@latest"

  clean:
    cmds:
      - "rm -rf ./todo-service/{{.BINARY}}"
